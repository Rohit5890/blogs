{"version":3,"sources":["components/common/TitleHeader/index.js","components/common/Card/index.js","components/common/BlogList/index.js","components/common/SearchFilter/index.js","components/BlogListView/index.js","components/BlogDetailsView/index.js","App.js","index.js"],"names":["TitleHeader","props","className","element","title","Card","blog","blogPublishedDate","openDetailedBlog","onClick","category","likes","author","srcSet","src","imgs","thumb","alt","BlogList","blogTitle","split","join","published_date","localStorage","setItem","JSON","stringify","this","values","searchValue","history","push","pathname","state","index","id","blogArrayList","map","Date","toDateString","key","view","viewTitle","renderBlogsList","Component","withRouter","SearchFilter","type","value","onChange","e","getfilteredList","target","BlogListView","fullblogArrayList","loadedListlength","blogArrayListLength","blogsArrInLocalStorage","parse","getItem","fetch","then","res","json","setState","slice","length","catch","error","includes","prevProps","prevState","getSortedBlogList","searchVal","filteredList","filter","item","toLowerCase","property","a","b","newfullblogArrayList","sortedBlogList","sort","obj1","obj2","i","result","numberOfProperties","computeSort","elemName","name","currChekboxElem","newValues","checked","toggleCheck","loadMoreBlogs","BlogDetailsView","currentBlog","likedBlog","blogList","findIndex","location","find","updateCurrentBlog","large","width","height","description","likeBlog","similarBlogList","listType","Object","keys","renderBlog","renderSimilarBlogs","App","removeItem","window","addEventListener","clearData","removeEventListener","exact","path","component","renderView","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69165cd3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TitleHeader = (props)=><header className={props.className}>\r\n    <props.element >{props.title}</props.element>\r\n    <hr/>\r\n</header>;\r\n\r\nexport default TitleHeader;\r\n","import React from 'react';\r\n\r\n\r\nconst Card = (props)=>{\r\n    let {blog, blogPublishedDate, openDetailedBlog}= props;\r\n        return (\r\n            <div className='card' onClick={()=>{openDetailedBlog(blog)}}>\r\n                <div className='blog-data-wrap'>\r\n                    <div className=\"blog-list-head\">\r\n                        <span>{blogPublishedDate} -  <b className=\"category\">{blog.category}</b> </span>\r\n                        <div className='like-wrap'>\r\n                            <i></i>\r\n                            <span>{blog.likes} Likes</span>\r\n                        </div>\r\n                    </div>\r\n                    <h2>{blog.title}</h2>\r\n                    <p>{blog[\"short-description\"]}</p>\r\n                    <b>By: <i>{blog.author}</i></b>\r\n                </div>\r\n                <img srcSet={` https://cdn2.iconfinder.com/data/icons/iconslandtransport/PNG/256x256/CarGrey.png 978w, \r\n                https://cdn2.iconfinder.com/data/icons/iconslandtransport/PNG/128x128/CarGrey.png 320w `}\r\n                 src={`${blog.imgs.thumb}`} alt={blog.title}/>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport TitleHeader from '../TitleHeader';\r\nimport Card from '../Card';\r\n\r\n\r\nclass BlogList extends Component {\r\n\r\n  openDetailedBlog(blog) {\r\n    let blogTitle = blog.title.split(' ').join('');\r\n    let blogPublishedDate = blog.published_date;\r\n\r\n    localStorage.setItem('values', JSON.stringify(this.props.values))\r\n    localStorage.setItem('searchValue', JSON.stringify(this.props.searchValue))\r\n    \r\n    this.props.history.push({\r\n      pathname:`/details/${blogTitle}/${blogPublishedDate}`,\r\n      state: {index: blog.id}\r\n    });\r\n  }\r\n \r\n  renderBlogsList() {\r\n    \r\n    let { blogArrayList } = this.props;\r\n\r\n    const newblogArrayList = blogArrayList.map((blog, index) => {\r\n      let blogPublishedDate = new Date(blog.published_date).toDateString()\r\n      \r\n      return (\r\n        <Card key={`${blog.published_date}-${blog.id}`} blogPublishedDate={blogPublishedDate} blog={blog} openDetailedBlog={(blog, index)=>{this.openDetailedBlog(blog)}} />\r\n      )\r\n    })\r\n\r\n    return newblogArrayList;\r\n  }\r\n  \r\n  render(){\r\n   return(\r\n    <div className='blog-wrap'>\r\n      { (this.props.view !=='main') && <TitleHeader title={this.props.viewTitle} element={'h2'}/>}\r\n      <div className=\"blog-list\">\r\n        {this.renderBlogsList()}\r\n      </div>\r\n    </div>\r\n   )\r\n }\r\n}\r\n\r\nexport default withRouter(BlogList);","import React from 'react';\r\n\r\nconst SearchFilter = (props)=><input type=\"text\"  value={props.searchValue} onChange={(e)=>{props.getfilteredList(e.target.value)}}/>\r\n\r\nexport default SearchFilter;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport BlogList from '../common/BlogList';\r\nimport SearchFilter from '../common/SearchFilter';\r\nimport TitleHeader from '../common/TitleHeader';\r\n\r\nimport './index.css';\r\n\r\n\r\nclass BlogListView extends Component {\r\n\r\n  state = {\r\n    blogArrayList: [],\r\n    fullblogArrayList: [],\r\n    loadedListlength: 0,\r\n    blogArrayListLength: 0,\r\n    searchValue:'',\r\n    values:[],\r\n    published_date: false,\r\n    category:false,\r\n    author:false\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let blogsArrInLocalStorage = JSON.parse(localStorage.getItem('blogArrayList'));\r\n    if (!blogsArrInLocalStorage) {\r\n      await fetch('./data/blogs.json').then((res) => {\r\n        return res.json();\r\n      }).then((res) => {\r\n        localStorage.setItem('blogArrayList', JSON.stringify(res));\r\n        this.setState({\r\n          fullblogArrayList: res,\r\n          blogArrayList: res.slice(0, 4),\r\n          loadedListlength: 4,\r\n          blogArrayListLength: res.length\r\n        })\r\n      }).catch(error => {\r\n\r\n      });\r\n\r\n    } else {\r\n      debugger;\r\n      let values = localStorage.getItem('values') !==\"undefined\" ? JSON.parse(localStorage.getItem('values')):[];\r\n      let searchValue = localStorage.getItem('searchValue')!==\"undefined\"  ? localStorage.getItem('searchValue') :'';\r\n\r\n\r\n      this.setState({\r\n        fullblogArrayList: blogsArrInLocalStorage,\r\n        blogArrayList: blogsArrInLocalStorage.slice(0, 4),\r\n        loadedListlength: 4,\r\n        blogArrayListLength: blogsArrInLocalStorage.length,\r\n        values: values,\r\n        searchValue: searchValue,\r\n        author: values.includes('author') ? true : false,\r\n        category:values.includes('category') ? true : false,\r\n        published_date:values.includes('published_date') ? true : false\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(prevState.values.length !== this.state.values.length){\r\n      this.getSortedBlogList(this.state.values);\r\n    }\r\n\r\n  }\r\n\r\n  loadMoreBlogs() {\r\n    let { blogArrayList, loadedListlength, fullblogArrayList } = this.state;\r\n\r\n    this.setState({\r\n      blogArrayList: [...blogArrayList, ...fullblogArrayList.slice(loadedListlength, loadedListlength + 4)],\r\n      loadedListlength: loadedListlength + 4\r\n    });\r\n  }\r\n  getfilteredList(searchVal){debugger;\r\n    let {fullblogArrayList} = this.state;\r\n\r\n    if(searchVal){\r\n      let filteredList = fullblogArrayList.filter((item)=> item.author.toLowerCase().includes(searchVal) || item.category.toLowerCase().includes(searchVal))\r\n      \r\n      this.setState({\r\n        searchValue: searchVal,\r\n        blogArrayList: filteredList\r\n      })\r\n    } else{\r\n      this.setState({\r\n        searchValue: searchVal,\r\n        blogArrayList: fullblogArrayList.slice(0,4)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  computeSort(property) {\r\n    let sortOrder = 1;\r\n    return function (a,b) {\r\n        let result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\r\n        \r\n        return result * sortOrder;\r\n    }\r\n  }\r\n\r\n  getSortedBlogList(values){\r\n    let {fullblogArrayList}= this.state;\r\n    let newfullblogArrayList = [...fullblogArrayList]; \r\n    if(values.length){\r\n      let sortedBlogList = newfullblogArrayList.sort((()=>{\r\n        return (obj1, obj2)=>{\r\n          let i = 0, result = 0, numberOfProperties = values.length;\r\n          \r\n          while(result === 0 && i < numberOfProperties) {\r\n            result = this.computeSort(values[i])(obj1, obj2);\r\n            i++;\r\n          }\r\n          return result;\r\n        }\r\n      })(...values));\r\n\r\n    \r\n      this.setState({\r\n        blogArrayList: sortedBlogList,\r\n        values\r\n      });\r\n    } else{\r\n      this.setState({\r\n        blogArrayList: fullblogArrayList.slice(0,4)\r\n      });\r\n     }\r\n  }\r\n\r\n  toggleCheck(e){\r\n    let elemName = e.target.name;\r\n    let {[elemName]:currChekboxElem, values} = this.state;\r\n    let newValues =[];\r\n    \r\n\r\n    if(!currChekboxElem){\r\n      newValues = [...values, ...[elemName]];\r\n    } else{\r\n      newValues = values.filter((value)=> value !== elemName)\r\n    }\r\n    \r\n    this.setState({\r\n      [elemName] : !this.state[elemName],\r\n      values: newValues,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { blogArrayListLength, loadedListlength, blogArrayList, searchValue, values } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <TitleHeader className='title-main' title=\"Blog\" element={'h1'}/>\r\n        <div className='utility-seg'>\r\n          <div className=\"search-utility\">\r\n            <span>Search Blog: </span>\r\n            <SearchFilter \r\n              searchValue={searchValue} \r\n              getfilteredList={(searchVal)=>{this.getfilteredList(searchVal)}}\r\n            />\r\n          </div>\r\n          <div className=\"sort-utility\">\r\n            <span>Sort Blog By: </span>\r\n            <label>\r\n              <span>Author</span>\r\n              <input type=\"checkbox\" name='author' checked={this.state.author} onChange={(e)=>{this.toggleCheck(e)}} />\r\n            </label>\r\n            <label>\r\n              <span>Category</span>\r\n              <input type=\"checkbox\" name='category' checked={this.state.category} onChange={(e)=>{this.toggleCheck(e)}} />\r\n            </label>\r\n            <label>\r\n              <span>Published Date</span>\r\n              <input type=\"checkbox\" name='published_date' checked={this.state.published_date} onChange={(e)=>{this.toggleCheck(e)}} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {blogArrayListLength && <BlogList searchValue={searchValue} values={values} view='main'  blogArrayList={blogArrayList} />}\r\n        {(!searchValue && !values.length)  && ((loadedListlength !== blogArrayListLength) && <button className=\"load-more\" onClick={() => { this.loadMoreBlogs() }}>Load More Blogs</button>)}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(BlogListView);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport BlogList from '../common/BlogList';\r\n\r\nimport './index.css';\r\n\r\nclass BlogDetailsView extends Component {\r\n\r\n  state={\r\n    currentBlog:{},\r\n    likedBlog:false\r\n  }\r\n\r\n  likeBlog(currentBlog){\r\n    let {blogList} = this.state;\r\n    let  index = blogList.findIndex((blog)=>currentBlog.id === blog.id);\r\n    \r\n    if(!this.state.likedBlog && (typeof(index) === \"number\")){\r\n      blogList[index] = {...blogList[index], ...{likes:(blogList[index].likes + 1)}}; \r\n      localStorage.setItem('blogArrayList',JSON.stringify(blogList))\r\n      \r\n      this.setState({\r\n        currentBlog: blogList[index],\r\n        likedBlog: true\r\n      })\r\n    }\r\n  }\r\n  updateCurrentBlog(){\r\n    if(localStorage.getItem('blogArrayList')){\r\n      let {index} = this.props.history.location.state;\r\n      let blogList = JSON.parse(localStorage.getItem('blogArrayList'));\r\n      let currentBlog = blogList.find((blog)=>blog.id === index);\r\n\r\n      this.setState({\r\n        currentBlog, \r\n        blogList,\r\n        likedBlog: false\r\n      })\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.updateCurrentBlog();\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.location.state.index !== prevProps.location.state.index){\r\n      this.updateCurrentBlog();\r\n    }\r\n  }\r\n  renderBlog() {\r\n    let {currentBlog} = this.state;\r\n\r\n    return (\r\n        <>\r\n          <img src={`${currentBlog.imgs.large}`} alt={currentBlog.title}/>\r\n          <div className=\"blog-details-seg\">\r\n            <h1>{currentBlog.title}</h1>\r\n            <div className=\"author-seg\">\r\n              <img width=\"auto\" height=\"auto\" src=\"https://cdn0.iconfinder.com/data/icons/app-user-interface-5/48/user-24.png\" alt={`avatar-${currentBlog.author}`} />\r\n              <span>By: <i>{currentBlog.author}</i></span>\r\n            </div>\r\n            <hr/>\r\n            <h2>About {currentBlog.title}</h2>\r\n            <p>{currentBlog.description}</p>\r\n            <div className=\"blog-likes-seg like-wrap\">\r\n              <i></i>\r\n              <span>{currentBlog.likes} Likes</span>\r\n              <button onClick={()=>{this.likeBlog(currentBlog)}}>Like</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"ads-wrap\">\r\n\r\n          </div>\r\n        </>\r\n    )\r\n  }\r\n  renderSimilarBlogs(){\r\n    let {blogList, currentBlog} = this.state;\r\n    let similarBlogList = blogList.filter((blog)=>blog.category === currentBlog.category && blog.id !==currentBlog.id)\r\n\r\n    return (\r\n      <BlogList listType='similar' blogArrayList={similarBlogList} viewTitle=\"Similar Blogs\"/>\r\n    )\r\n  }\r\n  render() {\r\n    const {currentBlog} = this.state;\r\n    return (\r\n      <>\r\n      {Object.keys(currentBlog).length && <div className='blog-details-wrap'>\r\n          {this.renderBlog()}\r\n          <div className=\"similar-blogs-list\">\r\n              {this.renderSimilarBlogs()}\r\n          </div>\r\n        </div>\r\n      }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(BlogDetailsView);","import React, {Component} from 'react';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\n\nimport './App.css';\nimport BlogListView from './components/BlogListView';\nimport BlogDetailsView from './components/BlogDetailsView';\n\nclass App extends Component{\n\n  clearData(){\n    localStorage.removeItem('blogArrayList');\n  }\n\n  componentDidMount(){\n    window.addEventListener('beforeunload', this.clearData);\n  }\n  componentWillUnmount(){\n    this.clearData();\n    window.removeEventListener('beforeunload', this.clearData);\n  }\n\n  renderView(){\n    return(\n      <Switch>\n        <Route exact path=\"/\" component={BlogListView} />\n        <Route exact path=\"/details/:title/:id\" component={BlogDetailsView} />\n      </Switch>\n    )\n  }\n  render(){\n    return (\n      <div className=\"app\">\n        <HashRouter>\n          {this.renderView()}\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}